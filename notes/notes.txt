GIVEN a command-line application that accepts user input
WHEN I am prompted for my team members and their information
THEN an HTML file is generated that displays a nicely formatted team roster based on user input
WHEN I click on an email address in the HTML
THEN my //default email program// opens and populates the TO field of the email with the address
WHEN I click on the GitHub username
THEN that //GitHub profile opens in a new tab//
WHEN I start the application
THEN I am prompted to enter the //team manager’s name, employee ID, email address, and office number//
WHEN I enter the team manager’s name, employee ID, email address, and office number
THEN I am presented with a //menu with the option to add an engineer or an intern or to finish building my team//
WHEN I select the engineer option
THEN I am prompted to enter the engineer’s name, ID, email, and GitHub username, and I am taken back to the menu
WHEN I select the intern option
THEN I am prompted to enter the intern’s name, ID, email, and school, and I am taken back to the menu
WHEN I decide to finish building my team
THEN I exit the application, and the HTML is generated




reinstalled inquirer and json installed 




////app.js previous
.then (({employeeType}) => {
            if (employeeType === 'Manager') {
                inquirer.prompt([
                    {
                        type:'input',
                        name: 'name',
                        message: 'Please enter the name of the manager',
                        validate:nameInput => {
                            if (nameInput) {
                                return true;
                            } else {
                                console.log("So ya the manager doesn't have a name....? PLEASE ENTER THE NAME OF THE MANAGER!");
                                return false;
                            }
                        }
                    }
                ])
            }
        })










//////////////////////////////////index.js previous/////////////////
        //page creation link
// const roleGenerator = require("./src/roleGenerator");

//node modules
const inquirer = require("inquirer");
const fs = require("fs");

//link to team libraries
const Manager = require("./team_library/Manager");
const Engineer = require("./team_library/Engineer");
const Intern = require("./team_library/Intern");

let defaultID = 1


////////////////////////////////////////////////////////////////////////////////////////


///Generator Manager IOI (information of interest)///
const managerInfo = () => {
  return (
    inquirer
      .prompt([
        {
          type: "input",
          message: "Please enter the manager's name...",
          name: "name",
          validate: (value) => {
            if (value) {
              return true;
            } else {
              console.log("I'm Sorry! Please enter a valid name...");
              return false;
            }
          },
        },
        {
          type: "input",
          message: "please enter the manager's employee ID...",
          name: "id",
          default: defaultID,
        },
        {
          type: "input",
          message: "please enter the manager's email address...",
          name: "email",
          validate: (value) => {
            if (value) {
              return true;
            } else {
              return console.log(
                "I'm Sorry! Please enter a valid email address..."
              );
            }
          },
        },
        {
          type: "input",
          message: "Please enter the manager's office number...",
          name: "officeNumber",
          validate: (value) => {
            if (value) {
              return true;
            } else {
              console.log("I'm Sorry! Please enter a valid office number...");
              return false;
            }
          },
        },
      ])

      //for each new client//
      .then(function ({ name, id, email, officeNumber }) {
        let manager = new Manager(name, id, email, officeNumber);
        let generator = new roleGenerator();

        
      })
  );
};


/////////OG liveViewHTML/////////////////
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.tailwindcss.com"></script>
    <title>A Khiaotic Team Profile Generator</title>
    <!-- CSS only -->
    <!--<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">  -->
    <link src="/dist/CSS/teamstyle.css" />
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              blurple: "#9b5de5",
              pinky: "#F15BB5",
              yellow: "#FEE440",
              lightblue: "#00BBF9",
              seafoam: "#00F5D4",
            },
          },
        },
      };
    </script>
  </head>
  <body>
    <div
      class="bg-blurple p-8 text-center text-3xl text-white max-width font-poppins font-bold rounded-md"
    >
      Khiaotic's Team Profile Generator
    </div>

    <main class = "container  my-12 mx-auto px-4 md:px-12">
      <!-- CONTAINER: manager card-->
      <div class="p-8">
      <div class="w-60 bg-yellow rounded-xl "id="teamContainer" > 
        <!--image-->
        <div class="font-bold text-center text-large rounded-xl">Name</div>
        <img class="object-none object-center h-40 rounded-xl" src="https://placebeard.it/640x360">
        <div class="font-bold text-center text-large rounded-xl">Manager</div>
        <ul class="pl-2 pb-2" id="jobTitle-group">
          <li>ID:</li>
          <li>Email Address:</li>
          <li>Office #:</li>
        </ul>
     
      </div>
    </div>
  

</main>
</body>
</html> 
 
  </div>

</body>
</html>